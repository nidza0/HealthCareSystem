<Window x:Class="SIMS.View.ViewPatient.BookAnAppointment"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SIMS.View.ViewPatient"
        mc:Ignorable="d"
        Title="BookAnAppointment" Height="450" Width="800"
        WindowStartupLocation="CenterOwner"
        >
    <Grid Background="{StaticResource BackgroundColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Style="{StaticResource BorderBlockStyle}">
            <Label Style="{StaticResource LabelStyle}" Content="Doctor appointments" HorizontalAlignment="Center"/>
        </Border>

        <Border Grid.Row="1" Style="{StaticResource BorderBlockStyle}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"></ColumnDefinition>
                <ColumnDefinition Width="*" MinWidth="300"></ColumnDefinition>
            </Grid.ColumnDefinitions>


            <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100"></RowDefinition>
                        <RowDefinition Height="100"></RowDefinition>
                        <RowDefinition Height="30"></RowDefinition>
                    </Grid.RowDefinitions>
                <!--Profile image-->
                <Border Grid.Row="0" Margin="5 0 5 0" Width="80" Height="80">
                    <Image Source="{Binding ImagePath}"/>
                </Border>
                
                
                    <StackPanel Grid.Row="1" Orientation="Vertical" HorizontalAlignment="Center">
                        <Label  Style="{StaticResource InputLabel}">
                            <TextBlock FontWeight="Bold" Foreground="{StaticResource labelColor}" VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{} {0} {1}">
                                    <Binding Path="Doctor.Name"/>
                                    <Binding Path="Doctor.Surname"/>
                                </MultiBinding>
                            </TextBlock.Text>
                            </TextBlock>
                        </Label>

                            <Label VerticalContentAlignment="Center">
                                <TextBlock Foreground="{StaticResource labelColor}" Text="{Binding Path=Doctor.DocTypeEnum}">
                                </TextBlock>
                            </Label>
                    </StackPanel>

                    <StackPanel Grid.Row="2" Orientation="Horizontal">
                        <Label>
                            <TextBlock Foreground="{StaticResource labelColor}" FontWeight="Bold" FontSize="13">
                                Select a date:
                            </TextBlock>
                            

                        </Label>

                        <DatePicker Background="Transparent"
                             HorizontalAlignment="Left"
                             SelectedDate="{Binding Path=SelectedDate, Mode=TwoWay}" SelectedDateChanged="DatePicker_SelectedDateChanged"
                             DisplayDateStart="{Binding FirstAllowedDate}">

                        </DatePicker>
                        <!--Datepicker-->
           
                    </StackPanel>
            </Grid>
            
            <DataGrid  Grid.Column="1" x:Name="doctorAppointmentGrid" ItemsSource="{Binding Path=Appointments}" IsReadOnly="True" VerticalAlignment="Top" AutoGenerateColumns="False" SelectionMode="Single">

                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGrid}">
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="DataGridCell.IsSelected" Value="True">
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Transparent"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground"
                            Value="{DynamicResource
                                   {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Transparent"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="#ffcccb"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Patient}" Value="{x:Null}">
                                <Setter Property="Background" Value="LightBlue"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                        
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    <DataGridTextColumn  Width="80" Header="Time" CanUserResize ="False" CanUserReorder="False">
                        <DataGridTextColumn.Binding>
                            <Binding Path="TimeInterval.StartTime" StringFormat="HH:mm"/>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width ="*" Header="Location"  CanUserResize ="False" CanUserReorder="False">
                        <DataGridTextColumn.Binding>
                            <MultiBinding StringFormat="{}{0} , {1} , {2}, {3}">
                                <Binding Path="DoctorInAppointment.Hospital.Address.Street" />
                                <Binding Path="DoctorInAppointment.Hospital.Address.Location.City"/>
                                <Binding Path="DoctorInAppointment.Hospital.Address.Location.Country"/>
                                <Binding Path="DoctorInAppointment.Office.RoomNumber"/>
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn Width="10" CanUserResize ="False" CanUserReorder="False">

                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <Button Content="+" x:Name="bookAnAppointmentButton" Click="BookAnAppointmentButton_Click">
                                        <Button.ToolTip>
                                            <ToolTip>
                                                Click here to make an appointment
                                            </ToolTip>
                                        </Button.ToolTip>
                                        <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Style.Triggers>

                                                <DataTrigger Binding="{Binding Patient}"
                                 Value="{x:Null}">
                                                    <Setter Property="IsEnabled"
                                Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

            </DataGrid>     
        </Grid>
        </Border>
    </Grid>
</Window>
